{"version":3,"sources":["reducers/namesReducer.js","reducers/dataReducer.js","reducers/filterReducer.js","store.js","services/servers.js","components/Title.js","components/Subtitle.js","components/Input.js","components/FilterSearch.js","components/FilterCheckBox.js","components/ActiveButton.js","components/DataRow.js","components/Loading.js","App.js","index.js"],"names":["getNames","names","type","data","namesReducer","state","action","dataReducer","console","log","setFilter","filter","filterReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","baseUrl","isPlayersOnline","online","players","isPlayersMax","max","isBlocked","formatDate","d","date","Date","dd","getDate","mm","getMonth","getFullYear","fetchData","name","a","axios","get","server_data","serverInfo","block_data","blockInfo","allData","hostname","ip","version","playersOnline","playersMax","blocked","blockTime","lastBlocked","Title","Subtitle","Input","onChange","Button","variant","color","component","accept","style","display","multiple","useStyles","makeStyles","filterTextField","width","filterSearch","Filter","classes","dispatch","useDispatch","className","noValidate","autoComplete","TextField","id","label","e","preventDefault","target","value","searchFilter","filterCheckBox","margin","FilterCheckBox","useSelector","FormControl","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","labelPlacement","checked","onClick","buttonLoading","ActiveButton","useState","open","setOpen","setButtonLoading","fetchResponse","setFetchResponse","response","success","offlineMode","reason","concat","TableCell","CircularProgress","isOpen","onRequestClose","ariaHideApp","content","fontFamily","top","left","right","bottom","marginRight","transform","size","hidden","rows","backgroundColor","DataRow","loading","hideWhenLoading","TableRow","Loading","showWhenLoading","LinearProgress","container","border","table","height","overflow","tableBody","headers","fontStyle","filterRow","flexDirection","links","App","setLoading","toLowerCase","includes","useEffect","map","fetchHelper","then","getData","catch","message","stopLoading","length","file","files","reader","FileReader","onload","bstr","result","workbook","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","filteredList","split","undefined","readAsBinaryString","TableContainer","Paper","Table","TableHead","TableBody","textAlign","href","rel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39b16656.chunk.js","sourcesContent":["export const getNames = names => {\n    return {\n        type: 'GET_NAMES',\n        data: names,\n    }\n}\n\nconst namesReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'GET_NAMES':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default namesReducer\n","export const getData = data => {\n    return async dispatch => {\n        dispatch({\n            type: 'GET_DATA',\n            data: data,\n        })\n    }\n}\n\nconst dataReducer = (state = [], action) => {\n    console.log('ACTION.DATA: ', action.data)\n    switch (action.type) {\n        case 'GET_DATA':\n            return [...state, action.data]\n        default:\n            return state\n    }\n}\n\nexport default dataReducer\n","export const searchFilter = filter => {\n    return {\n        type: 'TEXT_FILTER',\n        data: filter,\n    }\n}\n\nexport const setFilter = filter => {\n    return {\n        type: 'SET_FILTER',\n        data: filter,\n    }\n}\n\nconst filterReducer = (state = 'NO_FILTER', action) => {\n    switch (action.type) {\n        case 'TEXT_FILTER':\n            return action.data\n        case 'SET_FILTER':\n            return action.data\n        case 'NO_FILTER':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default filterReducer\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport namesReducer from './reducers/namesReducer'\nimport dataReducer from './reducers/dataReducer'\nimport filterReducer from './reducers/filterReducer'\n\nconst reducer = combineReducers({\n    names: namesReducer,\n    data: dataReducer,\n    filter: filterReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import axios from 'axios'\n\nconst baseUrl = 'https://fast-thicket-91718.herokuapp.com/api'\n\nconst isOnline = data => (data === true ? 'yes' : 'no')\nconst isPlayersOnline = data => {\n    if (data.online === false) {\n        return 'N/A'\n    }\n    return data.players.online\n}\nconst isPlayersMax = data => {\n    if (data.online === false) {\n        return 'N/A'\n    }\n    return data.players.max\n}\nconst isBlocked = data => (data === true ? 'yes' : 'no')\n\nconst formatDate = d => {\n    if (d !== null) {\n        let date = new Date(d)\n        let dd = date.getDate()\n        let mm = date.getMonth() + 1\n        let yyyy = date.getFullYear()\n        if (dd < 10) {\n            dd = '0' + dd\n        }\n        if (mm < 10) {\n            mm = '0' + mm\n        }\n        return (d = mm + '/' + dd + '/' + yyyy)\n    }\n    return 'N/A'\n}\n\nconst fetchData = async name => {\n    console.log('fetchData name: ', name)\n    const server_data = await axios.get(`${baseUrl}/serverinfo/${name}`)\n    const serverInfo = server_data.data\n\n    const block_data = await axios.get(`${baseUrl}/blockinfo/${name}`)\n    const blockInfo = block_data.data\n\n    // const offline_data = await axios.get(\n    //     `http://localhost:8080/api/offlineinfo/${name.name}`\n    // )\n    // const offlineInfo = offline_data.data\n\n    console.log('fetch data: ', serverInfo, blockInfo)\n\n    const allData = {\n        name: name,\n        hostname: serverInfo.hostname,\n        ip: serverInfo.ip,\n        version: serverInfo.version || 'N/A',\n        online: isOnline(serverInfo.online),\n        playersOnline: isPlayersOnline(serverInfo),\n        playersMax: isPlayersMax(serverInfo),\n        blocked: isBlocked(blockInfo.blocked),\n        blockTime: formatDate(blockInfo.lastBlocked),\n    }\n    console.log('allData: ', allData)\n    return allData\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchData }\n","import React from 'react'\n\nconst Title = () => {\n    return <h1>Minecraft Server Audit</h1>\n}\n\nexport default Title\n","import React from 'react'\n\nconst Subtitle = () => {\n    return (\n        <h3>\n            Upload CSV File w/ Server URLs in a Single Column\n            <br />\n        </h3>\n    )\n}\n\nexport default Subtitle\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\n\nconst Input = ({ onChange }) => {\n    return (\n        <Button variant='contained' color='primary' component='label'>\n            <input\n                type='file'\n                accept='.csv, .xlsx, .xls'\n                style={{ display: 'none' }}\n                onChange={onChange}\n                multiple\n            />\n            Upload File <CloudUploadIcon></CloudUploadIcon>\n        </Button>\n    )\n}\n\nexport default Input\n","import React from 'react'\nimport { searchFilter } from '../reducers/filterReducer'\nimport { useDispatch } from 'react-redux'\n\nimport { makeStyles, TextField } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles(() => ({\n    filterTextField: {\n        width: '33%',\n    },\n    filterSearch: {\n        width: '75%',\n    },\n}))\n\nconst Filter = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const handleChange = e => {\n        e.preventDefault()\n        const filter = e.target.value\n        dispatch(searchFilter(filter))\n    }\n    return (\n        <form className={classes.filterSearch} noValidate autoComplete='off'>\n            <TextField\n                className={classes.filterTextField}\n                id='standard-basic'\n                label='Search Names'\n                onChange={handleChange}\n            />\n            <SearchIcon color='primary' />\n        </form>\n    )\n}\n\nexport default Filter\n","import { useDispatch, useSelector } from 'react-redux'\nimport { setFilter } from '../reducers/filterReducer'\nimport { makeStyles, Radio, RadioGroup, FormControl, FormControlLabel } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n    filterCheckBox: {\n        margin: '0 auto'\n    }\n}))\n\nconst FilterCheckBox = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const state = useSelector(state => state.filter)\n    return (\n        <FormControl className={classes.filterCheckBox} component='fieldset'>\n            <RadioGroup row aria-label='position' name='position' defaultValue='top'>\n                <FormControlLabel\n                    value='NO_FILTER'\n                    control={<Radio color='primary' />}\n                    label='All'\n                    labelPlacement='top'\n                    checked={state === 'NO_FILTER'}\n                    onClick={() => dispatch(setFilter('NO_FILTER'))}\n                />\n                <FormControlLabel\n                    value='BLOCKED_FILTER'\n                    control={<Radio color='primary' />}\n                    label='Blocked'\n                    labelPlacement='top'\n                    onClick={() => dispatch(setFilter('BLOCKED_FILTER'))}\n                />\n                <FormControlLabel\n                    value='AVAILABLE_FILTER'\n                    control={<Radio color='primary' />}\n                    label='Available'\n                    labelPlacement='top'\n                    onClick={() => dispatch(setFilter('AVAILABLE_FILTER'))}\n                />\n            </RadioGroup>\n        </FormControl>\n    )\n}\n\nexport default FilterCheckBox\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { makeStyles, Button, TableCell, CircularProgress } from '@material-ui/core'\nimport Modal from 'react-modal'\n\nconst useStyles = makeStyles(() => ({\n    buttonLoading: {\n        color: 'white',\n    },\n}))\n\nconst ActiveButton = ({ hostname }) => {\n    const [open, setOpen] = useState(false)\n    const [buttonLoading, setButtonLoading] = useState(false)\n    const [fetchResponse, setFetchResponse] = useState('')\n\n    const classes = useStyles()\n\n    const customStyles = {\n        content: {\n            fontFamily: 'Roboto',\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    }\n\n    const fetchData = async hostname => {\n        setButtonLoading(true)\n        try {\n            const data = await axios.get(\n                `https://fast-thicket-91718.herokuapp.com/api/offlineinfo/${hostname}`\n            )\n            const response = data.data\n            console.log('ACTIVE BUTTON response: ', response)\n            if (!response.success) {\n                setFetchResponse('Error while checking offline-mode status')\n            } else if (response.offlineMode) {\n                setFetchResponse('Server is using offline mode')\n            } else {\n                setFetchResponse(\n                    \"Server aborted the join process, it's either using online mode or a whitelist\"\n                )\n                if (response.reason) {\n                    fetchResponse.concat(`reason was: ${response.reason}`)\n                }\n            }\n        } catch (error) {\n            setFetchResponse('error connecting to server - please try again later')\n        }\n\n        setOpen(!open)\n        setButtonLoading(false)\n    }\n    console.log('fetchResponse: ', fetchResponse)\n\n    return (\n        <TableCell>\n            <Button variant='contained' color='primary' onClick={() => fetchData(hostname)}>\n                {buttonLoading ? <CircularProgress className={classes.buttonLoading} /> : 'Active?'}\n            </Button>\n            <div>\n                <Modal\n                    isOpen={open}\n                    onRequestClose={() => setOpen(false)}\n                    ariaHideApp={false}\n                    style={customStyles}\n                >\n                    <h2>Active Status</h2>\n                    {fetchResponse}\n                    <br />\n                    <br />\n                    <Button\n                        variant='outlined'\n                        color='secondary'\n                        size='small'\n                        onClick={() => setOpen(!open)}\n                    >\n                        close\n                    </Button>\n                </Modal>\n            </div>\n        </TableCell>\n    )\n}\n\nexport default ActiveButton\n","import React from 'react'\nimport { makeStyles, TableRow, TableCell } from '@material-ui/core'\nimport ActiveButton from './ActiveButton'\n\nconst useStyles = makeStyles(() => ({\n    hidden: {\n        display: 'none',\n    },\n    rows: {\n        backgroundColor: 'white',\n    },\n}))\n\nconst DataRow = ({ data, loading }) => {\n    console.log('DATAROW DATA: ', data)\n    const classes = useStyles()\n\n    const hideWhenLoading = loading ? classes.hidden : classes.rows\n\n    return (\n        <TableRow className={`${hideWhenLoading}`}>\n            <TableCell>{data.name}</TableCell>\n            <TableCell>{data.hostname}</TableCell>\n            <TableCell>{data.ip}</TableCell>\n            <TableCell>{data.version}</TableCell>\n            <TableCell>{data.online}</TableCell>\n            <TableCell>{data.playersOnline}</TableCell>\n            <TableCell>{data.playersMax}</TableCell>\n            <TableCell>{data.blocked}</TableCell>\n            <TableCell>{data.blockTime}</TableCell>\n            <ActiveButton hostname={data.hostname} />\n        </TableRow>\n    )\n}\n\nexport default DataRow\n","import { makeStyles, TableRow, TableCell } from '@material-ui/core'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles(() => ({\n    hidden: {\n        display: 'none',\n    },\n    rows: {\n        backgroundColor: 'white',\n    },\n}))\n\nconst Loading = ({ loading, name }) => {\n    const classes = useStyles()\n    const showWhenLoading = loading ? classes.rows : classes.hidden\n    return (\n        <TableRow key={name} className={`${showWhenLoading}`}>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n            <TableCell>\n                <LinearProgress />\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default Loading\n","import React, { useEffect, useState } from 'react'\nimport * as XLSX from 'xlsx'\nimport fetchHelper from './services/servers'\nimport { getNames } from './reducers/namesReducer'\nimport { getData } from './reducers/dataReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n    makeStyles,\n    Table,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableBody,\n    TableRow,\n    Paper\n} from '@material-ui/core'\n\nimport Title from './components/Title'\nimport Subtitle from './components/Subtitle'\nimport Input from './components/Input'\nimport Filter from './components/FilterSearch'\nimport FilterCheckBox from './components/FilterCheckBox'\nimport DataRow from './components/DataRow'\nimport Loading from './components/Loading'\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        fontFamily: 'Roboto',\n        border: '0'\n    },\n    table: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    tableBody: {\n        display: 'block',\n        overflow: 'auto'\n    },\n    headers: {\n        fontStyle: 'bold',\n        backgroundColor: '#eee'\n    },\n    filterRow: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    links: {\n        margin: '10'\n    }\n}))\n\nconst App = () => {\n    const [loading, setLoading] = useState(false)\n    const classes = useStyles()\n\n    const dispatch = useDispatch()\n    const filter = useSelector(state => state.filter)\n    const names = useSelector(state => state.names)\n    const data = useSelector(state => {\n        if (filter === 'NO_FILTER') {\n            return state.data\n        } else if (filter === 'BLOCKED_FILTER') {\n            return state.data.filter(data => data.blocked === 'yes')\n        } else if (filter === 'AVAILABLE_FILTER') {\n            return state.data.filter(data => data.blocked === 'no')\n        } else if (\n            filter !== 'NO_FILTER' &&\n            filter !== 'BLOCKED_FILTER' &&\n            filter !== 'AVAILABLE_FILTER'\n        ) {\n            return state.data.filter(data => data.name.toLowerCase().includes(filter.toLowerCase()))\n        }\n    })\n\n    useEffect(() => {\n        names.map(name =>\n            fetchHelper\n                .fetchData(name)\n                .then(response => dispatch(getData(response)))\n                .catch(e => console.log('error: ', e.message))\n        )\n        console.log('firing useEffect')\n    }, [names, dispatch])\n\n    useEffect(() => {\n        stopLoading(names, data)\n    })\n\n    const handleFileUpload = e => {\n        e.preventDefault()\n        setLoading(true)\n        dispatch(getNames([]))\n        dispatch()\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = e => {\n            // PARSE DATA\n            const bstr = e.target.result\n            const workbook = XLSX.read(bstr, { type: 'binary' })\n            // GET FIRST WORKSHEET\n            const wsname = workbook.SheetNames[0]\n            const ws = workbook.Sheets[wsname]\n            // CONVERT ARRAY OF ARRAYS\n            const data = XLSX.utils.sheet_to_csv(ws, { header: 1 })\n            console.log('data from file upload: ', data)\n\n            const list = data.split(/\\r\\n|\\n/)\n            const filteredList = list.filter(e => e !== '' && e !== undefined)\n            dispatch(getNames(filteredList))\n        }\n        reader.readAsBinaryString(file)\n    }\n\n    const stopLoading = (data, names) => {\n        if (data.length > 0 && names.length > 0 && data.length === names.length) {\n            setLoading(false)\n        }\n    }\n\n    console.log('App component names: ', names)\n    console.log('App component data: ', data)\n    console.log('loading status: ', loading)\n\n    return (\n        <div className={classes.container}>\n            <div>\n                <Title />\n                <Subtitle />\n                <Input onChange={handleFileUpload} />\n                <div className={classes.filterRow}>\n                    <Filter />\n                    <FilterCheckBox />\n                </div>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label='Server Info'>\n                        <TableHead className={classes.headers}>\n                            <TableRow key='headers'>\n                                <TableCell>Name</TableCell>\n                                <TableCell>Hostname</TableCell>\n                                <TableCell>Ip</TableCell>\n                                <TableCell>Version</TableCell>\n                                <TableCell>Active</TableCell>\n                                <TableCell>Players Online</TableCell>\n                                <TableCell>Players Max</TableCell>\n                                <TableCell>Blocked</TableCell>\n                                <TableCell>Blocked Date</TableCell>\n                                <TableCell>Mode</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {names.map(name => (\n                                <Loading key={name} loading={loading} />\n                            ))}\n\n                            {data.map(data => (\n                                <DataRow key={data.name} data={data} loading={loading} />\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n            <div style={{ textAlign: 'center' }}>\n                <footer style={{ display: 'inline', width: '100%' }}>\n                    <a\n                        style={{ margin: '0 10px' }}\n                        href='https://api.mcsrvstat.us/'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        Server Data API\n                    </a>\n                    {'  '}\n                    <a\n                        style={{ margin: '0 10px' }}\n                        href='https://ismyserverblocked.com/'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        Block/Offline Data API\n                    </a>\n                </footer>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}