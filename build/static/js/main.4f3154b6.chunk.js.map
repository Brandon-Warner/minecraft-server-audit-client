{"version":3,"sources":["reducers/namesReducer.js","reducers/dataReducer.js","reducers/filterReducer.js","store.js","services/servers.js","components/Title.js","components/Navigation.js","components/Subtitle.js","components/Input.js","components/FilterSearch.js","components/FilterCheckBox.js","components/ModeButton.js","components/DataRow.js","components/Loading.js","components/SingleSearch.js","App.js","index.js"],"names":["getNames","names","type","data","namesReducer","state","action","newState","resetData","dispatch","a","dataReducer","setFilter","filter","filterReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","baseUrl","isOnline","isPlayersOnline","online","players","isPlayersMax","max","isBlocked","formatDate","d","date","Date","dd","getDate","mm","getMonth","getFullYear","fetchData","name","axios","get","server_data","serverInfo","block_data","blockInfo","allData","hostname","ip","version","active","playersOnline","playersMax","blocked","blockTime","lastBlocked","fetchAllData","offline_data","offlineInfo","modeData","success","offlineMode","Title","style","margin","useStyles","makeStyles","list","display","justifyContent","alignContent","listItem","listStyleType","listButton","background","textDecoration","border","color","letterSpacing","fontSize","transition","cursor","transform","Navigation","setPage","classes","className","onClick","Subtitle","href","rel","target","Button","variant","size","Input","onChange","refreshData","component","accept","multiple","marginLeft","filterTextField","width","filterSearch","input","Filter","useDispatch","noValidate","autoComplete","TextField","id","label","e","preventDefault","value","searchFilter","InputLabelProps","root","InputProps","filterCheckBox","StyledRadio","withStyles","checked","props","Radio","FilterCheckBox","useSelector","FormControl","RadioGroup","row","defaultValue","FormControlLabel","control","labelPlacement","buttonLoading","ModeButton","useState","open","setOpen","setButtonLoading","fetchResponse","setFetchResponse","response","reason","concat","TableCell","CircularProgress","hidden","rows","backgroundColor","transitionDuration","DataRow","loading","hideWhenLoading","TableRow","Loading","showWhenLoading","LinearProgress","table","height","overflow","tableBody","headers","fontStyle","formContainer","padding","form","marginTop","textAlign","formInput","outline","borderRadius","fontWeight","searchButton","SingleSearch","setName","searchName","setSearchName","result","setResult","console","log","useEffect","fetchHelper","then","catch","message","onSubmit","TableContainer","Paper","Table","TableHead","TableBody","map","r","maxWidth","theme","createTheme","typography","fontFamily","palette","primary","main","secondary","info","container","filterRow","flexDirection","links","App","setLoading","page","toLowerCase","includes","getData","stopLoading","length","ThemeProvider","file","files","reader","FileReader","onload","bstr","workbook","XLSX","wsname","SheetNames","ws","Sheets","filteredList","sheet_to_csv","header","split","undefined","readAsBinaryString","currentNames","setTimeout","icon","library","add","fab","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f3154b6.chunk.js","sourcesContent":["export const getNames = names => {\n    return {\n        type: 'GET_NAMES',\n        data: names\n    }\n}\n\nexport const resetNames = () => {\n    return {\n        type: 'RESET_NAMES'\n    }\n}\n\nconst namesReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'GET_NAMES':\n            return action.data\n        case 'RESET_NAMES':\n            const newState = []\n            return newState\n        default:\n            return state\n    }\n}\n\nexport default namesReducer\n","export const getData = data => {\n    return async dispatch => {\n        dispatch({\n            type: 'GET_DATA',\n            data: data\n        })\n    }\n}\n\nexport const resetData = () => {\n    return async dispatch => {\n        dispatch({\n            type: 'RESET_DATA'\n        })\n    }\n}\n\nconst dataReducer = (state = [], action) => {\n    // console.log('ACTION.DATA: ', action.data)\n    switch (action.type) {\n        case 'GET_DATA':\n            return [...state, action.data]\n        case 'RESET_DATA':\n            const newState = []\n            return newState\n        default:\n            return state\n    }\n}\n\nexport default dataReducer\n","export const searchFilter = filter => {\n    return {\n        type: 'TEXT_FILTER',\n        data: filter,\n    }\n}\n\nexport const setFilter = filter => {\n    return {\n        type: 'SET_FILTER',\n        data: filter,\n    }\n}\n\nconst filterReducer = (state = 'NO_FILTER', action) => {\n    switch (action.type) {\n        case 'TEXT_FILTER':\n            return action.data\n        case 'SET_FILTER':\n            return action.data\n        case 'NO_FILTER':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default filterReducer\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport namesReducer from './reducers/namesReducer'\nimport dataReducer from './reducers/dataReducer'\nimport filterReducer from './reducers/filterReducer'\n\nconst reducer = combineReducers({\n    names: namesReducer,\n    data: dataReducer,\n    filter: filterReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import axios from 'axios';\n\nconst baseUrl = 'https://fast-thicket-91718.herokuapp.com/api';\n\nconst isOnline = data => (data === true ? 'yes' : 'no');\nconst isPlayersOnline = data => {\n    if (data.online === false) {\n        return 'N/A';\n    }\n    return data.players.online;\n};\nconst isPlayersMax = data => {\n    if (data.online === false) {\n        return 'N/A';\n    }\n    return data.players.max;\n};\nconst isBlocked = data => (data === true ? 'yes' : 'no');\n\nconst formatDate = d => {\n    if (d !== null) {\n        let date = new Date(d);\n        let dd = date.getDate();\n        let mm = date.getMonth() + 1;\n        let yyyy = date.getFullYear();\n        if (dd < 10) {\n            dd = '0' + dd;\n        }\n        if (mm < 10) {\n            mm = '0' + mm;\n        }\n        return (d = mm + '/' + dd + '/' + yyyy);\n    }\n    return 'N/A';\n};\n\nconst onlineInfoResponse = data => {\n    if (!data.success) {\n        return 'Error while checking offline-mode status';\n    } else if (data.offlineMode) {\n        return 'Server is using offline mode';\n    } else {\n        return \"Server aborted the join process, it's either using online mode or a whitelist\";\n\n        // if (data.reason) {\n        //     fetchResponse.concat(`reason was: ${response.reason}`);\n        // }\n    }\n};\n\nconst fetchData = async name => {\n    // console.log('fetchData name: ', name);\n    const server_data = await axios.get(`${baseUrl}/serverinfo/${name}`);\n    const serverInfo = server_data.data;\n\n    const block_data = await axios.get(`${baseUrl}/blockinfo/${name}`);\n    const blockInfo = block_data.data;\n\n    // console.log('fetch data: ', serverInfo, blockInfo);\n\n    const allData = {\n        name: name,\n        hostname: serverInfo.hostname,\n        ip: serverInfo.ip,\n        version: serverInfo.version || 'N/A',\n        active: isOnline(serverInfo.online),\n        playersOnline: isPlayersOnline(serverInfo),\n        playersMax: isPlayersMax(serverInfo),\n        blocked: isBlocked(blockInfo.blocked),\n        blockTime: formatDate(blockInfo.lastBlocked)\n    };\n    // console.log('allData: ', allData);\n    return allData;\n};\n\nconst fetchAllData = async name => {\n    const server_data = await axios.get(`${baseUrl}/serverinfo/${name}`);\n    const serverInfo = server_data.data;\n\n    const block_data = await axios.get(`${baseUrl}/blockinfo/${name}`);\n    const blockInfo = block_data.data;\n\n    const offline_data = await axios.get(`${baseUrl}/offlineinfo/${name}`);\n    const offlineInfo = offline_data.data;\n\n    // console.log('fetch all data SERVER INFO: ', serverInfo);\n    // console.log('fetch all data BLOCK INFO: ', blockInfo);\n    // console.log('fetch all data ONLINE INFO: ', offlineInfo);\n\n    const allData = {\n        name: name,\n        hostname: serverInfo.hostname,\n        ip: serverInfo.ip,\n        version: serverInfo.version || 'N/A',\n        active: isOnline(serverInfo.online),\n        playersOnline: isPlayersOnline(serverInfo),\n        playersMax: isPlayersMax(serverInfo),\n        blocked: isBlocked(blockInfo.blocked),\n        blockTime: formatDate(blockInfo.lastBlocked),\n        modeData: onlineInfoResponse(offlineInfo)\n    };\n    // console.log('allData: ', allData);\n    return allData;\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchData, fetchAllData };\n","import React from 'react'\n\nconst Title = () => {\n    return <h1 style={{ margin: '.5em' }}>Minecraft Server Audit</h1>\n}\n\nexport default Title\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nconst useStyles = makeStyles(() => ({\n    list: {\n        display: 'flex',\n        justifyContent: 'right',\n        alignContent: 'center'\n    },\n    listItem: {\n        listStyleType: 'none'\n    },\n    listButton: {\n        background: 'none',\n        textDecoration: 'none',\n        margin: '0 10px',\n        border: 'none',\n        color: '#66fcf1',\n        letterSpacing: '1.5px',\n        fontSize: '16px',\n        transition: 'all 300ms linear',\n        cursor: 'pointer',\n\n        '&:hover': {\n            transform: 'scale(1.10)',\n            textDecoration: 'underline'\n        }\n    }\n}));\n\nconst Navigation = ({ setPage }) => {\n    const classes = useStyles();\n\n    const pageToSingle = () => setPage('single');\n    const pageToMultiple = () => setPage('multi');\n\n    return (\n        <div>\n            <ul className={classes.list}>\n                <li className={classes.list}>\n                    <button className={classes.listButton} onClick={pageToSingle}>\n                        SINGLE SEARCH\n                    </button>\n                </li>\n                <li className={classes.list}>\n                    <button className={classes.listButton} onClick={pageToMultiple}>\n                        MULTI SEARCH\n                    </button>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Navigation;\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nconst Subtitle = () => {\n    return (\n        <div style={{ margin: '1em' }}>\n            <a\n                href='https://docs.google.com/spreadsheets/d/1qHRo5yP2VPuMvxHIvp6lTmi7NonYxGGQl6fUcyU1gfc/edit?usp=sharing'\n                rel='noopener noreferrer'\n                target='_blank'\n                style={{textDecoration: 'none'}}\n            >\n                <Button variant='contained' color='secondary' size='small' >\n                    Sample CSV File\n                </Button>\n            </a>\n        </div>\n    )\n}\n\nexport default Subtitle\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\n\nconst Input = ({ onChange, refreshData }) => {\n    // const [loading, setLoading] = useState(false)\n    return (\n        <div style={{ margin: '1em' }}>\n            <Button variant='contained' color='primary' component='label'>\n                <input\n                    type='file'\n                    accept='.csv, .xlsx, .xls'\n                    style={{ display: 'none' }}\n                    onChange={onChange}\n                    multiple\n                />\n                Upload File <CloudUploadIcon style={{ marginLeft: '5px' }}></CloudUploadIcon>\n            </Button>\n            <Button\n                variant='contained'\n                color='secondary'\n                size='small'\n                style={{ marginLeft: '10px' }}\n                onClick={refreshData}\n            >\n                REFRESH DATA\n            </Button>\n        </div>\n    )\n}\n\nexport default Input\n","import React from 'react'\nimport { searchFilter } from '../reducers/filterReducer'\nimport { useDispatch } from 'react-redux'\n\nimport { makeStyles, TextField } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles(() => ({\n    filterTextField: {\n        width: '33%'\n    },\n    filterSearch: {\n        width: '75%'\n    },\n    input: {\n        color: '#66fcf1'\n    }\n}))\n\nconst Filter = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const handleChange = e => {\n        e.preventDefault()\n        const filter = e.target.value\n        dispatch(searchFilter(filter))\n    }\n    return (\n        <form\n            style={{ margin: '1em' }}\n            className={classes.filterSearch}\n            noValidate\n            autoComplete='off'\n        >\n            <TextField\n                color='primary'\n                className={classes.filterTextField}\n                id='standard-basic'\n                label='Search Names'\n                onChange={handleChange}\n                InputLabelProps={{\n                    classes: {\n                        root: classes.input\n                    }\n                }}\n                InputProps={{\n                    classes: {\n                        root: classes.input\n                    }\n                }}\n            />\n            <SearchIcon color='primary' />\n        </form>\n    )\n}\n\nexport default Filter\n","import { useDispatch, useSelector } from 'react-redux'\nimport { setFilter } from '../reducers/filterReducer'\nimport {\n    makeStyles,\n    Radio,\n    RadioGroup,\n    FormControl,\n    FormControlLabel,\n    withStyles\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n    filterCheckBox: {\n        margin: '0 auto'\n    }\n}))\n\nconst StyledRadio = withStyles({\n    root: {\n        color: '#45a29e',\n        '&$checked': {\n            color: '#66fcf1'\n        }\n    },\n    checked: {}\n})(props => <Radio color='default' {...props} />)\n\nconst FilterCheckBox = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const state = useSelector(state => state.filter)\n    return (\n        <FormControl className={classes.filterCheckBox} component='fieldset'>\n            <RadioGroup row aria-label='position' name='position' defaultValue='top'>\n                <FormControlLabel\n                    value='NO_FILTER'\n                    control={<StyledRadio />}\n                    label='All'\n                    labelPlacement='top'\n                    checked={state === 'NO_FILTER'}\n                    onClick={() => dispatch(setFilter('NO_FILTER'))}\n                />\n                <FormControlLabel\n                    value='BLOCKED_FILTER'\n                    control={<StyledRadio />}\n                    label='Blocked'\n                    labelPlacement='top'\n                    onClick={() => dispatch(setFilter('BLOCKED_FILTER'))}\n                />\n                <FormControlLabel\n                    value='AVAILABLE_FILTER'\n                    control={<StyledRadio />}\n                    label='Active'\n                    labelPlacement='top'\n                    onClick={() => dispatch(setFilter('AVAILABLE_FILTER'))}\n                />\n            </RadioGroup>\n        </FormControl>\n    )\n}\n\nexport default FilterCheckBox\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles, Button, TableCell, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    buttonLoading: {\n        color: '#45a29e'\n    }\n}));\n\nconst ModeButton = ({ hostname }) => {\n    const [open, setOpen] = useState(false);\n    const [buttonLoading, setButtonLoading] = useState(false);\n    const [fetchResponse, setFetchResponse] = useState('');\n\n    const classes = useStyles();\n\n    const fetchData = async hostname => {\n        setButtonLoading(true);\n        try {\n            const data = await axios.get(\n                `https://fast-thicket-91718.herokuapp.com/api/offlineinfo/${hostname}`\n            );\n            const response = data.data;\n            // console.log('ACTIVE BUTTON response: ', response)\n            if (!response.success) {\n                setFetchResponse('Error while checking offline-mode status');\n            } else if (response.offlineMode) {\n                setFetchResponse('Server is using offline mode');\n            } else {\n                setFetchResponse(\n                    \"Server aborted the join process, it's either using online mode or a whitelist\"\n                );\n                if (response.reason) {\n                    fetchResponse.concat(`reason was: ${response.reason}`);\n                }\n            }\n        } catch (error) {\n            setFetchResponse('error connecting to server - please try again later');\n        }\n\n        setOpen(!open);\n        setButtonLoading(false);\n    };\n    // console.log('fetchResponse: ', fetchResponse)\n\n    return (\n        <TableCell>\n            {fetchResponse ? (\n                fetchResponse\n            ) : (\n                <Button variant='contained' color='primary' onClick={() => fetchData(hostname)}>\n                    {buttonLoading ? (\n                        <CircularProgress className={classes.buttonLoading} />\n                    ) : (\n                        'Check'\n                    )}\n                </Button>\n            )}\n        </TableCell>\n    );\n};\n\nexport default ModeButton;\n","import React from 'react';\nimport { makeStyles, TableRow, TableCell } from '@material-ui/core';\nimport ModeButton from './ModeButton';\n\nconst useStyles = makeStyles(() => ({\n    hidden: {\n        display: 'none'\n    },\n    rows: {\n        backgroundColor: 'white',\n        '&:hover': {\n            backgroundColor: '#def2f1',\n            transitionDuration: '400ms'\n        }\n    }\n}));\n\nconst DataRow = ({ data, loading }) => {\n    // console.log('DATAROW DATA: ', data);\n    const classes = useStyles();\n\n    const hideWhenLoading = loading ? classes.hidden : classes.rows;\n\n    return (\n        <TableRow className={`${hideWhenLoading}`}>\n            <TableCell>{data.name}</TableCell>\n            <TableCell>{data.hostname}</TableCell>\n            <TableCell>{data.ip}</TableCell>\n            <TableCell>{data.version}</TableCell>\n            <TableCell>{data.active}</TableCell>\n            <TableCell>{data.playersOnline}</TableCell>\n            <TableCell>{data.playersMax}</TableCell>\n            <TableCell>{data.blocked}</TableCell>\n            <TableCell>{data.blockTime}</TableCell>\n            <ModeButton hostname={data.hostname} />\n        </TableRow>\n    );\n};\n\nexport default DataRow;\n","import { makeStyles, TableRow, TableCell } from '@material-ui/core'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles(() => ({\n    hidden: {\n        display: 'none'\n    },\n    rows: {\n        backgroundColor: '#eee'\n    }\n}))\n\nconst Loading = ({ loading, name }) => {\n    const classes = useStyles()\n    const showWhenLoading = loading ? classes.rows : classes.hidden\n    return (\n        <TableRow key={name} className={`${showWhenLoading}`}>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n            <TableCell>\n                <LinearProgress color='secondary' />\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default Loading\n","import React, { useState, useEffect } from 'react';\nimport fetchHelper from '../services/servers';\n// import { getData } from '../reducers/dataReducer';\n// import { useDispatch } from 'react-redux';\nimport {\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableContainer,\n    TableBody,\n    Paper,\n    makeStyles,\n    TextField,\n    Button,\n    CircularProgress\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(() => ({\n    table: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    tableBody: {\n        display: 'block',\n        overflow: 'auto'\n    },\n    headers: {\n        fontStyle: 'bold',\n        backgroundColor: '#def2f1'\n    },\n    rows: {\n        backgroundColor: 'white',\n        '&:hover': {\n            backgroundColor: '#def2f1',\n            transitionDuration: '400ms'\n        }\n    },\n    formContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        padding: '2rem'\n    },\n    form: {\n        fontSize: '20px',\n        width: '60vw',\n        marginTop: '20px',\n        textAlign: 'center'\n    },\n    formInput: {\n        fontSize: '20px',\n        padding: '5px',\n        margin: '5px',\n        border: 'none',\n        outline: 'none',\n        borderRadius: '4px',\n        width: '40%'\n    },\n    input: {\n        color: '#eee',\n        letterSpacing: '1.5px',\n        fontWeight: 'bold'\n    },\n    searchButton: {\n        margin: '10px'\n    },\n    buttonLoading: {\n        color: '#45a29e'\n    }\n}));\n\nconst SingleSearch = () => {\n    const [name, setName] = useState('');\n    const [searchName, setSearchName] = useState('');\n    const [result, setResult] = useState([]);\n    const [buttonLoading, setButtonLoading] = useState(false);\n    console.log('buttonLoading: ', buttonLoading);\n    const classes = useStyles();\n\n    useEffect(() => {\n        fetchHelper\n            .fetchAllData(searchName)\n            .then(response => setResult([...result, response]))\n            .catch(e => console.log('error: ', e.message));\n\n        setButtonLoading(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [searchName]);\n\n    const submit = e => {\n        e.preventDefault();\n\n        setSearchName(name);\n        setName('');\n        setButtonLoading(true);\n    };\n\n    const cancelResult = e => {\n        e.preventDefault();\n\n        setResult([]);\n    };\n\n    return (\n        <div>\n            <div className={classes.formContainer}>\n                <form className={classes.form} onSubmit={submit}>\n                    <TextField\n                        className={classes.formInput}\n                        id='standard-basic'\n                        label='LOOK UP A SINGLE MINECRAFT URL ...'\n                        onChange={({ target }) => setName(target.value)}\n                        InputLabelProps={{\n                            classes: {\n                                root: classes.input\n                            }\n                        }}\n                        InputProps={{\n                            classes: {\n                                root: classes.input\n                            }\n                        }}\n                    />\n                    <SearchIcon style={{ marginTop: '5px' }} color='primary' />\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        component='button'\n                        type='submit'\n                        className={classes.searchButton}\n                    >\n                        {buttonLoading ? (\n                            <CircularProgress className={classes.buttonLoading} />\n                        ) : (\n                            'search'\n                        )}\n                    </Button>\n\n                    <Button\n                        variant='contained'\n                        color='secondary'\n                        size='small'\n                        onClick={cancelResult}\n                    >\n                        CLEAR RESULTS\n                    </Button>\n                </form>\n            </div>\n            <div>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label='Single Server'>\n                        <TableHead className={classes.headers}>\n                            <TableRow key='headers'>\n                                <TableCell>Name</TableCell>\n                                <TableCell>Hostname</TableCell>\n                                <TableCell>Ip</TableCell>\n                                <TableCell>Version</TableCell>\n                                <TableCell>Active</TableCell>\n                                <TableCell>Players Online</TableCell>\n                                <TableCell>Players Max</TableCell>\n                                <TableCell>Blocked</TableCell>\n                                <TableCell>Blocked Date</TableCell>\n                                <TableCell>Mode Results</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {result.map(r => (\n                                <TableRow key={r.name} className={classes.rows}>\n                                    <TableCell>{r.name}</TableCell>\n                                    <TableCell>{r.hostname}</TableCell>\n                                    <TableCell>{r.ip}</TableCell>\n                                    <TableCell>{r.version}</TableCell>\n                                    <TableCell>{r.active}</TableCell>\n                                    <TableCell>{r.playersOnline}</TableCell>\n                                    <TableCell>{r.playersMax}</TableCell>\n                                    <TableCell>{r.blocked}</TableCell>\n                                    <TableCell>{r.blockTime}</TableCell>\n                                    <TableCell style={{ maxWidth: '300px' }}>\n                                        {r.modeData}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n};\n\nexport default SingleSearch;\n","import React, { useEffect, useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport fetchHelper from './services/servers';\nimport { getNames, resetNames } from './reducers/namesReducer';\nimport { getData, resetData } from './reducers/dataReducer';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    createTheme,\n    ThemeProvider,\n    makeStyles,\n    Table,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableBody,\n    TableRow,\n    Paper\n} from '@material-ui/core';\n\nimport Title from './components/Title';\nimport Navigation from './components/Navigation';\nimport Subtitle from './components/Subtitle';\nimport Input from './components/Input';\nimport Filter from './components/FilterSearch';\nimport FilterCheckBox from './components/FilterCheckBox';\nimport DataRow from './components/DataRow';\nimport Loading from './components/Loading';\nimport SingleSearch from './components/SingleSearch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: ['Quicksand']\n    },\n    palette: {\n        primary: { main: '#66fcf1' },\n        secondary: { main: '#45a29e' },\n        info: { main: '#def2f1' }\n    }\n});\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        fontFamily: 'Quicksand',\n        border: '0',\n        margin: '0'\n    },\n    table: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    tableBody: {\n        display: 'block',\n        overflow: 'auto'\n    },\n    headers: {\n        fontStyle: 'bold',\n        backgroundColor: '#def2f1'\n    },\n    filterRow: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    links: {\n        margin: '10'\n    }\n}));\n\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState('single');\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.filter);\n    const names = useSelector(state => state.names);\n    const data = useSelector(state => {\n        if (filter === 'NO_FILTER') {\n            return state.data;\n        } else if (filter === 'BLOCKED_FILTER') {\n            return state.data.filter(data => data.blocked === 'yes');\n        } else if (filter === 'AVAILABLE_FILTER') {\n            return state.data.filter(data => data.active === 'yes');\n        } else if (\n            filter !== 'NO_FILTER' &&\n            filter !== 'BLOCKED_FILTER' &&\n            filter !== 'AVAILABLE_FILTER'\n        ) {\n            return state.data.filter(data =>\n                data.name.toLowerCase().includes(filter.toLowerCase())\n            );\n        }\n    });\n\n    useEffect(() => {\n        names.map(name =>\n            fetchHelper\n                .fetchData(name)\n                .then(response => dispatch(getData(response)))\n                .catch(e => console.log('error: ', e.message))\n        );\n        console.log('firing useEffect');\n    }, [names, dispatch]);\n\n    useEffect(() => {\n        stopLoading(names, data);\n    });\n\n    const refreshData = e => {\n        e.preventDefault();\n        setLoading(true);\n        const currentNames = names;\n        // console.log('refreshData names: ', currentNames);\n        dispatch(resetData());\n        dispatch(resetNames());\n        setTimeout(() => {\n            dispatch(getNames(currentNames));\n        }, 200);\n    };\n\n    const handleFileUpload = e => {\n        e.preventDefault();\n        setLoading(true);\n        dispatch(resetNames());\n        dispatch(resetData());\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = e => {\n            // PARSE DATA\n            const bstr = e.target.result;\n            const workbook = XLSX.read(bstr, { type: 'binary' });\n            // GET FIRST WORKSHEET\n            const wsname = workbook.SheetNames[0];\n            const ws = workbook.Sheets[wsname];\n            // CONVERT ARRAY OF ARRAYS\n            const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n            // console.log('data from file upload: ', data);\n\n            const list = data.split(/\\r\\n|\\n/);\n            const filteredList = list.filter(e => e !== '' && e !== undefined);\n            dispatch(getNames(filteredList));\n        };\n        reader.readAsBinaryString(file);\n    };\n\n    const stopLoading = (data, names) => {\n        if (data.length > 0 && names.length > 0 && data.length === names.length) {\n            setLoading(false);\n        }\n    };\n\n    // console.log('App component names: ', names);\n    // console.log('App component data: ', data);\n    // console.log('loading status: ', loading);\n\n    if (page === 'multi') {\n        return (\n            <ThemeProvider theme={theme}>\n                <div className={classes.container}>\n                    <div>\n                        <Navigation setPage={setPage} />\n                        <Title />\n                        <Subtitle />\n                        <Input onChange={handleFileUpload} refreshData={refreshData} />\n                        <div className={classes.filterRow}>\n                            <Filter />\n                            <FilterCheckBox />\n                        </div>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label='Server Info'>\n                                <TableHead className={classes.headers}>\n                                    <TableRow key='headers'>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell>Hostname</TableCell>\n                                        <TableCell>Ip</TableCell>\n                                        <TableCell>Version</TableCell>\n                                        <TableCell>Active</TableCell>\n                                        <TableCell>Players Online</TableCell>\n                                        <TableCell>Players Max</TableCell>\n                                        <TableCell>Blocked</TableCell>\n                                        <TableCell>Blocked Date</TableCell>\n                                        <TableCell>Mode</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {names.map(name => (\n                                        <Loading key={name} loading={loading} />\n                                    ))}\n\n                                    {data.map(data => (\n                                        <DataRow key={data.name} data={data} loading={loading} />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                    <div style={{ textAlign: 'center' }}>\n                        <footer style={{ display: 'inline', width: '100%' }}>\n                            <a\n                                style={{ margin: '0 10px', color: '#66fcf1' }}\n                                href='https://api.mcsrvstat.us/'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                            >\n                                Server Data API\n                            </a>\n                            {'  '}\n                            <a\n                                style={{ margin: '0 10px', color: '#66fcf1' }}\n                                href='https://ismyserverblocked.com/'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                            >\n                                Block/Offline Data API\n                            </a>\n                            <a\n                                style={{ margin: '0 10px', color: '#66fcf1' }}\n                                href='https://github.com/Brandon-Warner/minecraft-server-audit-client'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                            >\n                                <FontAwesomeIcon icon={['fab', 'github']} size='lg' />\n                            </a>\n                        </footer>\n                    </div>\n                </div>\n            </ThemeProvider>\n        );\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.container}>\n                <div>\n                    <Navigation setPage={setPage} />\n                    <Title />\n                    <SingleSearch />\n                </div>\n            </div>\n        </ThemeProvider>\n    );\n};\nexport default App;\n","import ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport './index.css'\n\nlibrary.add(fab)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}